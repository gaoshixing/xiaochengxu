<style lang="less">
    .text-recordGSX {
        .yearLong {
            background-color: #EFEFF4;
            padding: 24rpx 30rpx;
            width:100%;
            height:40rpx;
            font-size: 28rpx;
            font-family:PingFangSC-Regular;
            color:rgba(136,136,136,1);
            line-height:40rpx;
        }
        .textInfo {
           padding: 15rpx 30rpx; 
           font-size: 34rpx;
           color: rgba(0,0,0,1);
           height: 120rpx;
           box-sizing: border-box;
           line-height: 48rpx;
           background-color: #fff;
        }
        .textTime {
            font-size: 26rpx;
            color: rgba(136,136,136,1);
            line-height: 37rpx;
        }
        .addRecord {
            margin-top: 50rpx;
            margin-bottom: 100rpx;
        }

        .status {
            float:right;
            margin: 3px 20px 0 0;
            font-size: 34rpx;
            line-height: 48rpx;
        }
        .pass {
            color: #00C700;
        }
        .no-pass {
            color: #FF2A2A;
        }
        .miss {
            color: #B79638
        }

    }
</style>
<template>
    <view class="text-recordGSX">
        <view class="yearLong">
                {{year}}
            </view>
        <repeat 
            for="{{recordDate}}" 
            key="index" index="index"
            item="item">
            <textRecordC
                @clickItem.user='clickItem'
                :recordDate="item"
                :index='index'
            >
            <taxt slot="status1" class="status {{item.status=='提交'?'pass':item.status=='未提交'?'no-pass':'miss'}}">
                {{item.status}}
            </taxt>
            </textRecordC>
        </repeat>
        <view class="addRecord">
            <!-- <button type="primary" @tap='addSumm'>
                添加巡考登记
            </button> -->
        </view>
        <bottomTab
            position="fixed-bottom"
            :listA='listA'
            @tabChanges.user='tabChanges'
            :int.sync='int'
        ></bottomTab>
    </view>
</template>


<script>
import wepy from 'wepy';
// import SliderNav from 'components/sliderNav';
import textRecordC from 'components/textRecordC';
import bottomTab from 'components/bottomTab';
import tourTest from '../api/tourTest';
import Common from '../api/common';

export default class textRecord extends wepy.page {
    config = {
        backgroundTextStyle: 'light',
        navigationBarBackgroundColor: '#0290FF',
        navigationBarTitleText: '巡考登记',
        navigationBarTextStyle: '#fff',
    }
    components = {
        // SliderNav: SliderNav,
        textRecordC: textRecordC,
        bottomTab: bottomTab,
    };

    data = {
        year: '',
        int: 0,
        listA: [
            {
                title: '巡考登记',
                src: '../images/JKanpai.png',
                ac_src: '../images/ac_JKanpai.png',
            },
            {
                title: '巡考总结',
                src: '../images/JKjilu.png',
                ac_src: '../images/ac_JKjilu.png',
            },
            {
                title: '个人中心',
                src: '../images/Shape.png',
                ac_src: '../images/Shape1.png',
            },
        ],
        recordDate: [],
    };
    computed = {
    };

    methods = {
        getList(that) {
            tourTest.getList().then(res => {
                that.recordDate = res.data.data;
                // console.log(that.recordDate, 8);
                that.$apply();
            }).catch(res => {
                console.log('res');
            });
            Common.nowNdXq().then(res => {
                that.year = res.data.data.nowNdXq;
                that.$apply();
            }).catch(res => {
                console.log('res');
            });
        },
        clickItem(val, index) {
            wepy.setStorage({
                key: 'year',
                data: this.recordDate[index].xkrq,
            });
            wepy.setStorage({
                key: 'site',
                data: this.recordDate[index].xkdd,
            });
            try {
                wepy.setStorageSync('formId', val);
            } catch (e) {}
            // wepy.setStorage({
            //     key: 'formId',
            //     data: val,
            // });
            wepy.navigateTo({
                url: `invigilateForm`,
            });
        },
        tabChanges(val) {
            if (val === 1) {
                wepy.navigateTo({
                    url: 'invSummarize',
                });
                return;
            };
            if (val === 2) {
                wepy.navigateTo({
                    url: 'personCenter',
                });
                this.int = 0;
                return;
            };
        },
    };
    onShow() {
    };
    onLoad() {
        // this.int = 1;
        this.$apply();
        const that = this;
        this.methods.getList(that);
    };
    onShareAppMessage(res) {
        if (res.from === 'button') {
        // 来自页面内转发按钮
            console.log(res.target);
        };
        return {
            title: '自定义转发标题',
            path: 'invigilateForm',
        };
    };
};
</script>
